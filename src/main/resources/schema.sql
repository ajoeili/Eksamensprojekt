CREATE TABLE IF NOT EXISTS PROJECTS
(
    PROJECT_ID  INT AUTO_INCREMENT PRIMARY KEY,
    NAME        VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    START_DATE  DATE         NOT NULL,
    END_DATE    DATE         NOT NULL,
    CONSTRAINT unique_project UNIQUE (NAME, DESCRIPTION, START_DATE, END_DATE)
    );

CREATE TABLE IF NOT EXISTS SUBPROJECTS
(
    SUBPROJECT_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME          VARCHAR(255) NOT NULL,
    DESCRIPTION   VARCHAR(255) NOT NULL,
    START_DATE    DATE         NOT NULL,
    END_DATE      DATE         NOT NULL,
    PROJECT_ID    INT          NOT NULL,
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS (PROJECT_ID),
    CONSTRAINT unique_subproject UNIQUE (NAME, DESCRIPTION, START_DATE, END_DATE, PROJECT_ID)
    );

CREATE TABLE IF NOT EXISTS EMPLOYEES
(
    EMPLOYEE_ID        INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME         VARCHAR(255) NOT NULL,
    LAST_NAME          VARCHAR(255) NOT NULL,
    EMAIL              VARCHAR(255) NOT NULL,
    PASSWORD           VARCHAR(255) NOT NULL,
    ROLE               VARCHAR(255) NOT NULL,
    IS_PROJECT_MANAGER BOOLEAN      NOT NULL,
    CONSTRAINT unique_employee UNIQUE (FIRST_NAME, LAST_NAME, EMAIL, PASSWORD)
    );

CREATE TABLE IF NOT EXISTS TASKS
(
    TASK_ID         INT AUTO_INCREMENT PRIMARY KEY,
    NAME            VARCHAR(255) NOT NULL,
    DESCRIPTION     VARCHAR(255) NOT NULL,
    ESTIMATED_HOURS INT          NOT NULL,
    PRIORITY        INT,
    DEADLINE        DATE         NOT NULL,
    IS_COMPLETED    BOOLEAN      NOT NULL DEFAULT FALSE,
    EMPLOYEE_ID     INT          NOT NULL,
    SUBPROJECT_ID   INT          NOT NULL,
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID),
    FOREIGN KEY (SUBPROJECT_ID) REFERENCES SUBPROJECTS (SUBPROJECT_ID),
    CONSTRAINT unique_task UNIQUE (NAME, DESCRIPTION, ESTIMATED_HOURS, PRIORITY, DEADLINE, SUBPROJECT_ID)
    );

-- Junction table
CREATE TABLE IF NOT EXISTS PROJECT_EMPLOYEE
(
    PROJECT_ID  INT,
    EMPLOYEE_ID INT,
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS (PROJECT_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID),
    PRIMARY KEY (PROJECT_ID, EMPLOYEE_ID)
    );